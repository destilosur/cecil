{"id":"World/systems/Loop.js","dependencies":[{"name":"D:\\programacion\\Cursos\\Three-DiscoverThree\\plantillaParcel\\package.json","includedInParent":true,"mtime":1676482843046},{"name":"three","loc":{"line":1,"column":33,"index":33},"parent":"D:\\programacion\\Cursos\\Three-DiscoverThree\\plantillaParcel\\src\\World\\systems\\Loop.js","resolved":"D:\\programacion\\Cursos\\Three-DiscoverThree\\plantillaParcel\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Loop = void 0;\nvar _three = require(\"three\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar clock = new _three.Clock();\nvar Loop = /*#__PURE__*/function () {\n  function Loop(camera, scene, renderer) {\n    _classCallCheck(this, Loop);\n    this.camera = camera;\n    this.scene = scene;\n    this.renderer = renderer;\n    this.updatables = [];\n  }\n  _createClass(Loop, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n      this.renderer.setAnimationLoop(function () {\n        // tell every animated object to tick forward one frame\n        _this.tick();\n        _this.renderer.render(_this.scene, _this.camera);\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.renderer.setAnimationLoop(null);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      // only call the getDelta function once per frame!\n      var delta = clock.getDelta(); // nos da en seg (0.0017) 17 milisegundos mas o menos\n\n      // console.log(`The last frame rendered in ${delta * 1000} milliseconds`);\n      var _iterator = _createForOfIteratorHelper(this.updatables),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var object = _step.value;\n          //se lo pasamos al método\n          object.tick(delta); // este método esta en el modulo del objeto c/obj tiene un tick personal\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n  return Loop;\n}();\nexports.Loop = Loop;"},"sourceMaps":null,"error":null,"hash":"38d8e4d585895c6934aa324061a483cc","cacheData":{"env":{}}}